// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversiteProjeYonetimSistemi.Data;

#nullable disable

namespace UniversiteProjeYonetimSistemi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250728085544_AddAciklamaToProjeDosya")]
    partial class AddAciklamaToProjeDosya
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Akademisyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Ofis")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Unvan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UzmanlikAlani")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Akademisyenler");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Bildirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AkademisyenId")
                        .HasColumnType("int");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BildirimTipi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OgrenciId")
                        .HasColumnType("int");

                    b.Property<bool>("Okundu")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AkademisyenId");

                    b.HasIndex("OgrenciId");

                    b.ToTable("Bildirimler", t =>
                        {
                            t.HasCheckConstraint("CHK_BildirimAlici", "(OgrenciId IS NOT NULL AND AkademisyenId IS NULL) OR (OgrenciId IS NULL AND AkademisyenId IS NOT NULL)");
                        });
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.DanismanlikGorusmesi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AkademisyenId")
                        .HasColumnType("int");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GorusmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("GorusmeTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.Property<int>("ProjeId")
                        .HasColumnType("int");

                    b.Property<string>("TalepEden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZamanDurumu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AkademisyenId");

                    b.HasIndex("OgrenciId");

                    b.HasIndex("ProjeId");

                    b.ToTable("DanismanlikGorusmeleri");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Degerlendirme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AkademisyenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DegerlendirmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DegerlendirmeTipi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProjeId")
                        .HasColumnType("int");

                    b.Property<int>("Puan")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AkademisyenId");

                    b.HasIndex("ProjeId");

                    b.ToTable("Degerlendirmeler");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("SonGiris")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Ogrenci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("OgrenciNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Ogrenciler");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Proje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int");

                    b.Property<int?>("OgrenciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("TeslimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("MentorId");

                    b.HasIndex("OgrenciId");

                    b.ToTable("Projeler");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.ProjeAsamasi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AsamaAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Degerlendirildi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DegerlendirmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjeId")
                        .HasColumnType("int");

                    b.Property<int>("SiraNo")
                        .HasColumnType("int");

                    b.Property<bool>("Tamamlandi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TamamlanmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjeId");

                    b.ToTable("ProjeAsamalari");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.ProjeDosya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DosyaAdi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("DosyaBoyutu")
                        .HasColumnType("bigint");

                    b.Property<string>("DosyaTipi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DosyaYolu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("YuklemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("YukleyenId")
                        .HasColumnType("int");

                    b.Property<string>("YukleyenTipi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ProjeId");

                    b.ToTable("ProjeDosyalari");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.ProjeKategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Renk")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProjeKategorileri");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.ProjeKaynagi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KaynakAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("KaynakTipi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProjeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("YayinTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Yazar")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ProjeId");

                    b.ToTable("ProjeKaynaklari");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.ProjeYorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AkademisyenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OgrenciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("YorumTipi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("AkademisyenId");

                    b.HasIndex("OgrenciId");

                    b.HasIndex("ProjeId");

                    b.ToTable("ProjeYorumlari", t =>
                        {
                            t.HasCheckConstraint("CHK_YorumYapan", "(OgrenciId IS NOT NULL AND AkademisyenId IS NULL) OR (OgrenciId IS NULL AND AkademisyenId IS NOT NULL)");
                        });
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Akademisyen", b =>
                {
                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Bildirim", b =>
                {
                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Akademisyen", "Akademisyen")
                        .WithMany("Bildirimler")
                        .HasForeignKey("AkademisyenId");

                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Ogrenci", "Ogrenci")
                        .WithMany("Bildirimler")
                        .HasForeignKey("OgrenciId");

                    b.Navigation("Akademisyen");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.DanismanlikGorusmesi", b =>
                {
                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Akademisyen", "Akademisyen")
                        .WithMany()
                        .HasForeignKey("AkademisyenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Ogrenci", "Ogrenci")
                        .WithMany()
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Proje", "Proje")
                        .WithMany()
                        .HasForeignKey("ProjeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Akademisyen");

                    b.Navigation("Ogrenci");

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Degerlendirme", b =>
                {
                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Akademisyen", "Akademisyen")
                        .WithMany("Degerlendirmeler")
                        .HasForeignKey("AkademisyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Proje", "Proje")
                        .WithMany("Degerlendirmeler")
                        .HasForeignKey("ProjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyen");

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Ogrenci", b =>
                {
                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Proje", b =>
                {
                    b.HasOne("UniversiteProjeYonetimSistemi.Models.ProjeKategori", "Kategori")
                        .WithMany("Projeler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Akademisyen", "Mentor")
                        .WithMany("Projeler")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Ogrenci", "Ogrenci")
                        .WithMany("Projeler")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Kategori");

                    b.Navigation("Mentor");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.ProjeAsamasi", b =>
                {
                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Proje", "Proje")
                        .WithMany("Asamalar")
                        .HasForeignKey("ProjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.ProjeDosya", b =>
                {
                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Proje", "Proje")
                        .WithMany("Dosyalar")
                        .HasForeignKey("ProjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.ProjeKaynagi", b =>
                {
                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Proje", "Proje")
                        .WithMany("Kaynaklar")
                        .HasForeignKey("ProjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.ProjeYorum", b =>
                {
                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Akademisyen", "Akademisyen")
                        .WithMany("Yorumlar")
                        .HasForeignKey("AkademisyenId");

                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Ogrenci", "Ogrenci")
                        .WithMany("Yorumlar")
                        .HasForeignKey("OgrenciId");

                    b.HasOne("UniversiteProjeYonetimSistemi.Models.Proje", "Proje")
                        .WithMany("Yorumlar")
                        .HasForeignKey("ProjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademisyen");

                    b.Navigation("Ogrenci");

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Akademisyen", b =>
                {
                    b.Navigation("Bildirimler");

                    b.Navigation("Degerlendirmeler");

                    b.Navigation("Projeler");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Ogrenci", b =>
                {
                    b.Navigation("Bildirimler");

                    b.Navigation("Projeler");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.Proje", b =>
                {
                    b.Navigation("Asamalar");

                    b.Navigation("Degerlendirmeler");

                    b.Navigation("Dosyalar");

                    b.Navigation("Kaynaklar");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("UniversiteProjeYonetimSistemi.Models.ProjeKategori", b =>
                {
                    b.Navigation("Projeler");
                });
#pragma warning restore 612, 618
        }
    }
}
